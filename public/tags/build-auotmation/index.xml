<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Build Auotmation on Musings of Software Dev</title>
    <link>http://www.michaeltroth.com/tags/build-auotmation/</link>
    <description>Recent content in Build Auotmation on Musings of Software Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Feb 2014 20:00:56 -0700</lastBuildDate>
    <atom:link href="http://www.michaeltroth.com/tags/build-auotmation/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Make Moving Your Builds Easy With MoveBuild</title>
      <link>http://www.michaeltroth.com/post/2014/02/16/make-moving-builds-easy-with-movebuild</link>
      <pubDate>Sun, 16 Feb 2014 20:00:56 -0700</pubDate>
      
      <guid>http://www.michaeltroth.com/post/2014/02/16/make-moving-builds-easy-with-movebuild</guid>
      <description>

&lt;h2 id=&#34;make-moving-your-builds-easy-with-movebuild:8f035773adafcaaa703c641c80622cbd&#34;&gt;Make Moving Your Builds Easy With MoveBuild&lt;/h2&gt;

&lt;p&gt;Using a simple repeatable process you will be able to move your builds to each environment.&lt;/p&gt;

&lt;h3 id=&#34;understanding-the-move-workflow:8f035773adafcaaa703c641c80622cbd&#34;&gt;Understanding the Move Workflow&lt;/h3&gt;

&lt;p&gt;As you move each build to each environment you want to create a pipeline. Where each build is considered a possible [[abbr title=&amp;ldquo;Release Candidate&amp;rdquo;]]RC[[/abbr]]. Promotion of each build requires that it passes a series of tests, with each promotion the level of testing becomes more intense. For example, moving the build to [[abbr title=&amp;ldquo;Development&amp;rdquo;]]Dev[[/abbr]] would only really require that the build can compile and pass a series of unit tests (if any are defined). Whilst, this is a simplistic test it gets you the necessary amount of feedback. As you progress to each level from [[abbr title=&amp;ldquo;Development&amp;rdquo;]]Dev[[/abbr]] To [[abbr title=&amp;ldquo;Quality Assurance&amp;rdquo;]]QA[[/abbr]] the tests become more stringent and the failure criteria becomes more easily defined.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://s3.amazonaws.com/mxrss-blog-images/63528178062.png&#34; alt=&#34;Sample Promotion&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The reason for this as we get closer to releasing a build to production we want to make certain at all costs that we will not have to rollback or at the very least make a rollback an infrequent event.&lt;/p&gt;

&lt;p&gt;Having been bitten by bad deployments, I can tell you that its important to make your deployment the SAME &lt;em&gt;regardless&lt;/em&gt; of where you deploy the binaries. This means that every time you move a piece a code it should be the same process, having differing ways of moving code from environment to environment could hide potential deployment problems.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;every time you move a piece a code it should be the same process, having differing ways of moving code from environment to environment could hide potential deployment problems&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In addition your should make sure that the following are also adhered to.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build your binaries once&lt;/li&gt;
&lt;li&gt;Configuration changes should be minimal.&lt;/li&gt;
&lt;li&gt;Follow your deployment process in each environment, the same. Treat it like production.&lt;/li&gt;
&lt;li&gt;Accept a deployment failure and kill that [[abbr title=&amp;ldquo;Release Canidate&amp;rdquo;]]RC[[/abbr]]&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;a-simple-build-promotion-script:8f035773adafcaaa703c641c80622cbd&#34;&gt;A Simple Build Promotion Script&lt;/h3&gt;

&lt;p&gt;I needed to ensure that the process I am using is the same as I deploy to each environment, Below is a script that I came up with that ensures that each move is atomic and follows the same structure.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mxrss/8816312.js&#34;&gt;&lt;/script&gt;

&lt;h4 id=&#34;additional-resources:8f035773adafcaaa703c641c80622cbd&#34;&gt;Additional Resources&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;Continuous Delivery&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.amazon.com/Continuous-Delivery-Deployment-Automation-Addison-Wesley/dp/0321601912&#34;&gt;Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation (Addison-Wesley Signature Series (Fowler))&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>